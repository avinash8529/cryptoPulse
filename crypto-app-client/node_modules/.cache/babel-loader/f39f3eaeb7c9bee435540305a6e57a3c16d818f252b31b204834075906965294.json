{"ast":null,"code":"import React, { useEffect, useRef } from 'react';\nimport { TypeaheadContext } from './Context';\nimport { defaultSelectHint, getHintText, getInputProps, getInputText, getIsOnlyResult, isFunction, pick } from '../utils';\nconst inputPropKeys = ['activeIndex', 'disabled', 'id', 'inputRef', 'isFocused', 'isMenuShown', 'multiple', 'onBlur', 'onChange', 'onClick', 'onFocus', 'onKeyDown', 'placeholder'];\nconst propKeys = ['activeIndex', 'hideMenu', 'isMenuShown', 'labelKey', 'onClear', 'onHide', 'onRemove', 'results', 'selected', 'text', 'toggleMenu'];\nconst contextKeys = ['activeIndex', 'id', 'initialItem', 'inputNode', 'onActiveItemChange', 'onAdd', 'onInitialItemChange', 'onMenuItemClick', 'setItem'];\nconst TypeaheadManager = props => {\n  const {\n    allowNew,\n    children,\n    initialItem,\n    isMenuShown,\n    onAdd,\n    onInitialItemChange,\n    onKeyDown,\n    onMenuToggle,\n    results,\n    selectHint\n  } = props;\n  const hintText = getHintText(props);\n  useEffect(() => {\n    if (!(allowNew || results.length)) {\n      onInitialItemChange();\n    }\n  });\n  const isInitialRender = useRef(true);\n  useEffect(() => {\n    if (isInitialRender.current) {\n      isInitialRender.current = false;\n      return;\n    }\n    onMenuToggle(isMenuShown);\n  }, [isMenuShown, onMenuToggle]);\n  const handleKeyDown = e => {\n    onKeyDown(e);\n    if (!initialItem) {\n      return;\n    }\n    const addOnlyResult = e.key === 'Enter' && getIsOnlyResult(props);\n    const shouldSelectHint = hintText && defaultSelectHint(e, selectHint);\n    if (addOnlyResult || shouldSelectHint) {\n      onAdd(initialItem);\n    }\n  };\n  const childProps = {\n    ...pick(props, propKeys),\n    getInputProps: getInputProps({\n      ...pick(props, inputPropKeys),\n      onKeyDown: handleKeyDown,\n      value: getInputText(props)\n    })\n  };\n  const contextValue = {\n    ...pick(props, contextKeys),\n    hintText,\n    isOnlyResult: getIsOnlyResult(props)\n  };\n  return React.createElement(TypeaheadContext.Provider, {\n    value: contextValue\n  }, isFunction(children) ? children(childProps) : children);\n};\nexport default TypeaheadManager;","map":{"version":3,"names":["React","useEffect","useRef","TypeaheadContext","defaultSelectHint","getHintText","getInputProps","getInputText","getIsOnlyResult","isFunction","pick","inputPropKeys","propKeys","contextKeys","TypeaheadManager","props","allowNew","children","initialItem","isMenuShown","onAdd","onInitialItemChange","onKeyDown","onMenuToggle","results","selectHint","hintText","length","isInitialRender","current","handleKeyDown","e","addOnlyResult","key","shouldSelectHint","childProps","value","contextValue","isOnlyResult","createElement","Provider"],"sources":["/home/avinash/projects/project-5/crypto-app/node_modules/react-bootstrap-typeahead/types/core/TypeaheadManager.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { TypeaheadContext } from './Context';\nimport { defaultSelectHint, getHintText, getInputProps, getInputText, getIsOnlyResult, isFunction, pick, } from '../utils';\nconst inputPropKeys = [\n    'activeIndex',\n    'disabled',\n    'id',\n    'inputRef',\n    'isFocused',\n    'isMenuShown',\n    'multiple',\n    'onBlur',\n    'onChange',\n    'onClick',\n    'onFocus',\n    'onKeyDown',\n    'placeholder',\n];\nconst propKeys = [\n    'activeIndex',\n    'hideMenu',\n    'isMenuShown',\n    'labelKey',\n    'onClear',\n    'onHide',\n    'onRemove',\n    'results',\n    'selected',\n    'text',\n    'toggleMenu',\n];\nconst contextKeys = [\n    'activeIndex',\n    'id',\n    'initialItem',\n    'inputNode',\n    'onActiveItemChange',\n    'onAdd',\n    'onInitialItemChange',\n    'onMenuItemClick',\n    'setItem',\n];\nconst TypeaheadManager = (props) => {\n    const { allowNew, children, initialItem, isMenuShown, onAdd, onInitialItemChange, onKeyDown, onMenuToggle, results, selectHint, } = props;\n    const hintText = getHintText(props);\n    useEffect(() => {\n        if (!(allowNew || results.length)) {\n            onInitialItemChange();\n        }\n    });\n    const isInitialRender = useRef(true);\n    useEffect(() => {\n        if (isInitialRender.current) {\n            isInitialRender.current = false;\n            return;\n        }\n        onMenuToggle(isMenuShown);\n    }, [isMenuShown, onMenuToggle]);\n    const handleKeyDown = (e) => {\n        onKeyDown(e);\n        if (!initialItem) {\n            return;\n        }\n        const addOnlyResult = e.key === 'Enter' && getIsOnlyResult(props);\n        const shouldSelectHint = hintText && defaultSelectHint(e, selectHint);\n        if (addOnlyResult || shouldSelectHint) {\n            onAdd(initialItem);\n        }\n    };\n    const childProps = {\n        ...pick(props, propKeys),\n        getInputProps: getInputProps({\n            ...pick(props, inputPropKeys),\n            onKeyDown: handleKeyDown,\n            value: getInputText(props),\n        }),\n    };\n    const contextValue = {\n        ...pick(props, contextKeys),\n        hintText,\n        isOnlyResult: getIsOnlyResult(props),\n    };\n    return (React.createElement(TypeaheadContext.Provider, { value: contextValue }, isFunction(children) ? children(childProps) : children));\n};\nexport default TypeaheadManager;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,gBAAgB,QAAQ,WAAW;AAC5C,SAASC,iBAAiB,EAAEC,WAAW,EAAEC,aAAa,EAAEC,YAAY,EAAEC,eAAe,EAAEC,UAAU,EAAEC,IAAI,QAAS,UAAU;AAC1H,MAAMC,aAAa,GAAG,CAClB,aAAa,EACb,UAAU,EACV,IAAI,EACJ,UAAU,EACV,WAAW,EACX,aAAa,EACb,UAAU,EACV,QAAQ,EACR,UAAU,EACV,SAAS,EACT,SAAS,EACT,WAAW,EACX,aAAa,CAChB;AACD,MAAMC,QAAQ,GAAG,CACb,aAAa,EACb,UAAU,EACV,aAAa,EACb,UAAU,EACV,SAAS,EACT,QAAQ,EACR,UAAU,EACV,SAAS,EACT,UAAU,EACV,MAAM,EACN,YAAY,CACf;AACD,MAAMC,WAAW,GAAG,CAChB,aAAa,EACb,IAAI,EACJ,aAAa,EACb,WAAW,EACX,oBAAoB,EACpB,OAAO,EACP,qBAAqB,EACrB,iBAAiB,EACjB,SAAS,CACZ;AACD,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAChC,MAAM;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,WAAW;IAAEC,KAAK;IAAEC,mBAAmB;IAAEC,SAAS;IAAEC,YAAY;IAAEC,OAAO;IAAEC;EAAY,CAAC,GAAGV,KAAK;EACzI,MAAMW,QAAQ,GAAGrB,WAAW,CAACU,KAAK,CAAC;EACnCd,SAAS,CAAC,MAAM;IACZ,IAAI,EAAEe,QAAQ,IAAIQ,OAAO,CAACG,MAAM,CAAC,EAAE;MAC/BN,mBAAmB,EAAE;IACzB;EACJ,CAAC,CAAC;EACF,MAAMO,eAAe,GAAG1B,MAAM,CAAC,IAAI,CAAC;EACpCD,SAAS,CAAC,MAAM;IACZ,IAAI2B,eAAe,CAACC,OAAO,EAAE;MACzBD,eAAe,CAACC,OAAO,GAAG,KAAK;MAC/B;IACJ;IACAN,YAAY,CAACJ,WAAW,CAAC;EAC7B,CAAC,EAAE,CAACA,WAAW,EAAEI,YAAY,CAAC,CAAC;EAC/B,MAAMO,aAAa,GAAIC,CAAC,IAAK;IACzBT,SAAS,CAACS,CAAC,CAAC;IACZ,IAAI,CAACb,WAAW,EAAE;MACd;IACJ;IACA,MAAMc,aAAa,GAAGD,CAAC,CAACE,GAAG,KAAK,OAAO,IAAIzB,eAAe,CAACO,KAAK,CAAC;IACjE,MAAMmB,gBAAgB,GAAGR,QAAQ,IAAItB,iBAAiB,CAAC2B,CAAC,EAAEN,UAAU,CAAC;IACrE,IAAIO,aAAa,IAAIE,gBAAgB,EAAE;MACnCd,KAAK,CAACF,WAAW,CAAC;IACtB;EACJ,CAAC;EACD,MAAMiB,UAAU,GAAG;IACf,GAAGzB,IAAI,CAACK,KAAK,EAAEH,QAAQ,CAAC;IACxBN,aAAa,EAAEA,aAAa,CAAC;MACzB,GAAGI,IAAI,CAACK,KAAK,EAAEJ,aAAa,CAAC;MAC7BW,SAAS,EAAEQ,aAAa;MACxBM,KAAK,EAAE7B,YAAY,CAACQ,KAAK;IAC7B,CAAC;EACL,CAAC;EACD,MAAMsB,YAAY,GAAG;IACjB,GAAG3B,IAAI,CAACK,KAAK,EAAEF,WAAW,CAAC;IAC3Ba,QAAQ;IACRY,YAAY,EAAE9B,eAAe,CAACO,KAAK;EACvC,CAAC;EACD,OAAQf,KAAK,CAACuC,aAAa,CAACpC,gBAAgB,CAACqC,QAAQ,EAAE;IAAEJ,KAAK,EAAEC;EAAa,CAAC,EAAE5B,UAAU,CAACQ,QAAQ,CAAC,GAAGA,QAAQ,CAACkB,UAAU,CAAC,GAAGlB,QAAQ,CAAC;AAC3I,CAAC;AACD,eAAeH,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}