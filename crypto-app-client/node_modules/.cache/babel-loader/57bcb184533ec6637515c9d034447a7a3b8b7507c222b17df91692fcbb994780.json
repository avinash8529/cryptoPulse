{"ast":null,"code":"import warning from 'warning';\nlet warned = {};\nexport default function warn(falseToWarn, message) {\n  if (!falseToWarn && message.indexOf('deprecated') !== -1) {\n    if (warned[message]) {\n      return;\n    }\n    warned[message] = true;\n  }\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n  warning(falseToWarn, `[react-bootstrap-typeahead] ${message}`, ...args);\n}\nexport function resetWarned() {\n  warned = {};\n}","map":{"version":3,"names":["warning","warned","warn","falseToWarn","message","indexOf","_len","arguments","length","args","Array","_key","resetWarned"],"sources":["/home/avinash/projects/project-5/crypto-app/node_modules/react-bootstrap-typeahead/types/utils/warn.js"],"sourcesContent":["import warning from 'warning';\nlet warned = {};\nexport default function warn(falseToWarn, message, ...args) {\n    if (!falseToWarn && message.indexOf('deprecated') !== -1) {\n        if (warned[message]) {\n            return;\n        }\n        warned[message] = true;\n    }\n    warning(falseToWarn, `[react-bootstrap-typeahead] ${message}`, ...args);\n}\nexport function resetWarned() {\n    warned = {};\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,IAAIC,MAAM,GAAG,CAAC,CAAC;AACf,eAAe,SAASC,IAAIA,CAACC,WAAW,EAAEC,OAAO,EAAW;EACxD,IAAI,CAACD,WAAW,IAAIC,OAAO,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;IACtD,IAAIJ,MAAM,CAACG,OAAO,CAAC,EAAE;MACjB;IACJ;IACAH,MAAM,CAACG,OAAO,CAAC,GAAG,IAAI;EAC1B;EAAC,SAAAE,IAAA,GAAAC,SAAA,CAAAC,MAAA,EANiDC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAOtDX,OAAO,CAACG,WAAW,EAAG,+BAA8BC,OAAQ,EAAC,EAAE,GAAGK,IAAI,CAAC;AAC3E;AACA,OAAO,SAASG,WAAWA,CAAA,EAAG;EAC1BX,MAAM,GAAG,CAAC,CAAC;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}