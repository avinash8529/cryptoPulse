{"ast":null,"code":"import isEqual from 'fast-deep-equal';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TypeaheadManager from './TypeaheadManager';\nimport { clearTypeahead, clickOrFocusInput, getInitialState, hideMenu, toggleMenu } from './TypeaheadState';\nimport { caseSensitiveType, checkPropType, defaultInputValueType, defaultSelectedType, highlightOnlyResultType, ignoreDiacriticsType, isRequiredForA11y, labelKeyType, optionType, selectedType } from '../propTypes';\nimport { addCustomOption, defaultFilterBy, getOptionLabel, getOptionProperty, getStringLabelKey, getUpdatedActiveIndex, getTruncatedOptions, isFunction, isShown, isString, noop, uniqueId, validateSelectedPropChange } from '../utils';\nimport { DEFAULT_LABELKEY } from '../constants';\nconst propTypes = {\n  allowNew: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  autoFocus: PropTypes.bool,\n  caseSensitive: checkPropType(PropTypes.bool, caseSensitiveType),\n  defaultInputValue: checkPropType(PropTypes.string, defaultInputValueType),\n  defaultOpen: PropTypes.bool,\n  defaultSelected: checkPropType(PropTypes.arrayOf(optionType), defaultSelectedType),\n  filterBy: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string.isRequired), PropTypes.func]),\n  highlightOnlyResult: checkPropType(PropTypes.bool, highlightOnlyResultType),\n  id: checkPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), isRequiredForA11y),\n  ignoreDiacritics: checkPropType(PropTypes.bool, ignoreDiacriticsType),\n  labelKey: checkPropType(PropTypes.oneOfType([PropTypes.string, PropTypes.func]), labelKeyType),\n  maxResults: PropTypes.number,\n  minLength: PropTypes.number,\n  multiple: PropTypes.bool,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onInputChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMenuToggle: PropTypes.func,\n  onPaginate: PropTypes.func,\n  open: PropTypes.bool,\n  options: PropTypes.arrayOf(optionType).isRequired,\n  paginate: PropTypes.bool,\n  selected: checkPropType(PropTypes.arrayOf(optionType), selectedType)\n};\nconst defaultProps = {\n  allowNew: false,\n  autoFocus: false,\n  caseSensitive: false,\n  defaultInputValue: '',\n  defaultOpen: false,\n  defaultSelected: [],\n  filterBy: [],\n  highlightOnlyResult: false,\n  ignoreDiacritics: true,\n  labelKey: DEFAULT_LABELKEY,\n  maxResults: 100,\n  minLength: 0,\n  multiple: false,\n  onBlur: noop,\n  onFocus: noop,\n  onInputChange: noop,\n  onKeyDown: noop,\n  onMenuToggle: noop,\n  onPaginate: noop,\n  paginate: true\n};\nfunction triggerInputChange(input, value) {\n  const inputValue = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, 'value');\n  inputValue && inputValue.set && inputValue.set.call(input, value);\n  const e = new Event('input', {\n    bubbles: true\n  });\n  input.dispatchEvent(e);\n}\nclass Typeahead extends React.Component {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n  state = getInitialState(this.props);\n  inputNode = null;\n  isMenuShown = false;\n  items = [];\n  componentDidMount() {\n    this.props.autoFocus && this.focus();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      labelKey,\n      multiple,\n      selected\n    } = this.props;\n    validateSelectedPropChange(selected, prevProps.selected);\n    if (selected && !isEqual(selected, prevState.selected)) {\n      this.setState({\n        selected\n      });\n      if (!multiple) {\n        this.setState({\n          text: selected.length ? getOptionLabel(selected[0], labelKey) : ''\n        });\n      }\n    }\n  }\n  render() {\n    const {\n      onChange,\n      ...props\n    } = this.props;\n    const mergedPropsAndState = {\n      ...props,\n      ...this.state\n    };\n    const {\n      filterBy,\n      labelKey,\n      options,\n      paginate,\n      shownResults,\n      text\n    } = mergedPropsAndState;\n    this.isMenuShown = isShown(mergedPropsAndState);\n    this.items = [];\n    let results = [];\n    if (this.isMenuShown) {\n      const cb = isFunction(filterBy) ? filterBy : defaultFilterBy;\n      results = options.filter(option => cb(option, mergedPropsAndState));\n      const shouldPaginate = paginate && results.length > shownResults;\n      results = getTruncatedOptions(results, shownResults);\n      if (addCustomOption(results, mergedPropsAndState)) {\n        results.push({\n          customOption: true,\n          [getStringLabelKey(labelKey)]: text\n        });\n      }\n      if (shouldPaginate) {\n        results.push({\n          [getStringLabelKey(labelKey)]: '',\n          paginationOption: true\n        });\n      }\n    }\n    return React.createElement(TypeaheadManager, {\n      ...mergedPropsAndState,\n      hideMenu: this.hideMenu,\n      inputNode: this.inputNode,\n      inputRef: this.inputRef,\n      isMenuShown: this.isMenuShown,\n      onActiveItemChange: this._handleActiveItemChange,\n      onAdd: this._handleSelectionAdd,\n      onBlur: this._handleBlur,\n      onChange: this._handleInputChange,\n      onClear: this._handleClear,\n      onClick: this._handleClick,\n      onFocus: this._handleFocus,\n      onHide: this.hideMenu,\n      onInitialItemChange: this._handleInitialItemChange,\n      onKeyDown: this._handleKeyDown,\n      onMenuItemClick: this._handleMenuItemSelect,\n      onRemove: this._handleSelectionRemove,\n      results: results,\n      setItem: this.setItem,\n      toggleMenu: this.toggleMenu\n    });\n  }\n  blur = () => {\n    this.inputNode && this.inputNode.blur();\n    this.hideMenu();\n  };\n  clear = () => {\n    this.setState(clearTypeahead);\n  };\n  focus = () => {\n    this.inputNode && this.inputNode.focus();\n  };\n  getInput = () => {\n    return this.inputNode;\n  };\n  inputRef = inputNode => {\n    this.inputNode = inputNode;\n  };\n  setItem = (item, position) => {\n    this.items[position] = item;\n  };\n  hideMenu = () => {\n    this.setState(hideMenu);\n  };\n  toggleMenu = () => {\n    this.setState(toggleMenu);\n  };\n  _handleActiveIndexChange = activeIndex => {\n    this.setState(state => ({\n      activeIndex,\n      activeItem: activeIndex >= 0 ? state.activeItem : undefined\n    }));\n  };\n  _handleActiveItemChange = activeItem => {\n    if (!isEqual(activeItem, this.state.activeItem)) {\n      this.setState({\n        activeItem\n      });\n    }\n  };\n  _handleBlur = e => {\n    e.persist();\n    this.setState({\n      isFocused: false\n    }, () => this.props.onBlur(e));\n  };\n  _handleChange = selected => {\n    this.props.onChange && this.props.onChange(selected);\n  };\n  _handleClear = () => {\n    this.inputNode && triggerInputChange(this.inputNode, '');\n    this.setState(clearTypeahead, () => {\n      if (this.props.multiple) {\n        this._handleChange([]);\n      }\n    });\n  };\n  _handleClick = e => {\n    e.persist();\n    const onClick = this.props.inputProps?.onClick;\n    this.setState(clickOrFocusInput, () => isFunction(onClick) && onClick(e));\n  };\n  _handleFocus = e => {\n    e.persist();\n    this.setState(clickOrFocusInput, () => this.props.onFocus(e));\n  };\n  _handleInitialItemChange = initialItem => {\n    if (!isEqual(initialItem, this.state.initialItem)) {\n      this.setState({\n        initialItem\n      });\n    }\n  };\n  _handleInputChange = e => {\n    e.persist();\n    const text = e.currentTarget.value;\n    const {\n      multiple,\n      onInputChange\n    } = this.props;\n    const shouldClearSelections = this.state.selected.length && !multiple;\n    this.setState((state, props) => {\n      const {\n        activeIndex,\n        activeItem,\n        shownResults\n      } = getInitialState(props);\n      return {\n        activeIndex,\n        activeItem,\n        selected: shouldClearSelections ? [] : state.selected,\n        showMenu: true,\n        shownResults,\n        text\n      };\n    }, () => {\n      onInputChange(text, e);\n      shouldClearSelections && this._handleChange([]);\n    });\n  };\n  _handleKeyDown = e => {\n    const {\n      activeItem\n    } = this.state;\n    if (!this.isMenuShown) {\n      if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n        this.setState({\n          showMenu: true\n        });\n      }\n      this.props.onKeyDown(e);\n      return;\n    }\n    switch (e.key) {\n      case 'ArrowUp':\n      case 'ArrowDown':\n        e.preventDefault();\n        this._handleActiveIndexChange(getUpdatedActiveIndex(this.state.activeIndex, e.key, this.items));\n        break;\n      case 'Enter':\n        e.preventDefault();\n        activeItem && this._handleMenuItemSelect(activeItem, e);\n        break;\n      case 'Escape':\n      case 'Tab':\n        this.hideMenu();\n        break;\n      default:\n        break;\n    }\n    this.props.onKeyDown(e);\n  };\n  _handleMenuItemSelect = (option, e) => {\n    if (getOptionProperty(option, 'paginationOption')) {\n      this._handlePaginate(e);\n    } else {\n      this._handleSelectionAdd(option);\n    }\n  };\n  _handlePaginate = e => {\n    e.persist();\n    this.setState((state, props) => ({\n      shownResults: state.shownResults + props.maxResults\n    }), () => this.props.onPaginate(e, this.state.shownResults));\n  };\n  _handleSelectionAdd = option => {\n    const {\n      multiple,\n      labelKey\n    } = this.props;\n    let selected;\n    let selection = option;\n    let text;\n    if (!isString(selection) && selection.customOption) {\n      selection = {\n        ...selection,\n        id: uniqueId('new-id-')\n      };\n    }\n    if (multiple) {\n      selected = this.state.selected.concat(selection);\n      text = '';\n    } else {\n      selected = [selection];\n      text = getOptionLabel(selection, labelKey);\n    }\n    this.setState((state, props) => ({\n      ...hideMenu(state, props),\n      initialItem: selection,\n      selected,\n      text\n    }), () => this._handleChange(selected));\n  };\n  _handleSelectionRemove = selection => {\n    const selected = this.state.selected.filter(option => !isEqual(option, selection));\n    this.focus();\n    this.setState((state, props) => ({\n      ...hideMenu(state, props),\n      selected\n    }), () => this._handleChange(selected));\n  };\n}\nexport default Typeahead;","map":{"version":3,"names":["isEqual","PropTypes","React","TypeaheadManager","clearTypeahead","clickOrFocusInput","getInitialState","hideMenu","toggleMenu","caseSensitiveType","checkPropType","defaultInputValueType","defaultSelectedType","highlightOnlyResultType","ignoreDiacriticsType","isRequiredForA11y","labelKeyType","optionType","selectedType","addCustomOption","defaultFilterBy","getOptionLabel","getOptionProperty","getStringLabelKey","getUpdatedActiveIndex","getTruncatedOptions","isFunction","isShown","isString","noop","uniqueId","validateSelectedPropChange","DEFAULT_LABELKEY","propTypes","allowNew","oneOfType","bool","func","autoFocus","caseSensitive","defaultInputValue","string","defaultOpen","defaultSelected","arrayOf","filterBy","isRequired","highlightOnlyResult","id","number","ignoreDiacritics","labelKey","maxResults","minLength","multiple","onBlur","onChange","onFocus","onInputChange","onKeyDown","onMenuToggle","onPaginate","open","options","paginate","selected","defaultProps","triggerInputChange","input","value","inputValue","Object","getOwnPropertyDescriptor","window","HTMLInputElement","prototype","set","call","e","Event","bubbles","dispatchEvent","Typeahead","Component","state","props","inputNode","isMenuShown","items","componentDidMount","focus","componentDidUpdate","prevProps","prevState","setState","text","length","render","mergedPropsAndState","shownResults","results","cb","filter","option","shouldPaginate","push","customOption","paginationOption","createElement","inputRef","onActiveItemChange","_handleActiveItemChange","onAdd","_handleSelectionAdd","_handleBlur","_handleInputChange","onClear","_handleClear","onClick","_handleClick","_handleFocus","onHide","onInitialItemChange","_handleInitialItemChange","_handleKeyDown","onMenuItemClick","_handleMenuItemSelect","onRemove","_handleSelectionRemove","setItem","blur","clear","getInput","item","position","_handleActiveIndexChange","activeIndex","activeItem","undefined","persist","isFocused","_handleChange","inputProps","initialItem","currentTarget","shouldClearSelections","showMenu","key","preventDefault","_handlePaginate","selection","concat"],"sources":["/home/avinash/projects/project-5/crypto-app/node_modules/react-bootstrap-typeahead/types/core/Typeahead.js"],"sourcesContent":["import isEqual from 'fast-deep-equal';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TypeaheadManager from './TypeaheadManager';\nimport { clearTypeahead, clickOrFocusInput, getInitialState, hideMenu, toggleMenu, } from './TypeaheadState';\nimport { caseSensitiveType, checkPropType, defaultInputValueType, defaultSelectedType, highlightOnlyResultType, ignoreDiacriticsType, isRequiredForA11y, labelKeyType, optionType, selectedType, } from '../propTypes';\nimport { addCustomOption, defaultFilterBy, getOptionLabel, getOptionProperty, getStringLabelKey, getUpdatedActiveIndex, getTruncatedOptions, isFunction, isShown, isString, noop, uniqueId, validateSelectedPropChange, } from '../utils';\nimport { DEFAULT_LABELKEY } from '../constants';\nconst propTypes = {\n    allowNew: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    autoFocus: PropTypes.bool,\n    caseSensitive: checkPropType(PropTypes.bool, caseSensitiveType),\n    defaultInputValue: checkPropType(PropTypes.string, defaultInputValueType),\n    defaultOpen: PropTypes.bool,\n    defaultSelected: checkPropType(PropTypes.arrayOf(optionType), defaultSelectedType),\n    filterBy: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.string.isRequired),\n        PropTypes.func,\n    ]),\n    highlightOnlyResult: checkPropType(PropTypes.bool, highlightOnlyResultType),\n    id: checkPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), isRequiredForA11y),\n    ignoreDiacritics: checkPropType(PropTypes.bool, ignoreDiacriticsType),\n    labelKey: checkPropType(PropTypes.oneOfType([PropTypes.string, PropTypes.func]), labelKeyType),\n    maxResults: PropTypes.number,\n    minLength: PropTypes.number,\n    multiple: PropTypes.bool,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onInputChange: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onMenuToggle: PropTypes.func,\n    onPaginate: PropTypes.func,\n    open: PropTypes.bool,\n    options: PropTypes.arrayOf(optionType).isRequired,\n    paginate: PropTypes.bool,\n    selected: checkPropType(PropTypes.arrayOf(optionType), selectedType),\n};\nconst defaultProps = {\n    allowNew: false,\n    autoFocus: false,\n    caseSensitive: false,\n    defaultInputValue: '',\n    defaultOpen: false,\n    defaultSelected: [],\n    filterBy: [],\n    highlightOnlyResult: false,\n    ignoreDiacritics: true,\n    labelKey: DEFAULT_LABELKEY,\n    maxResults: 100,\n    minLength: 0,\n    multiple: false,\n    onBlur: noop,\n    onFocus: noop,\n    onInputChange: noop,\n    onKeyDown: noop,\n    onMenuToggle: noop,\n    onPaginate: noop,\n    paginate: true,\n};\nfunction triggerInputChange(input, value) {\n    const inputValue = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, 'value');\n    inputValue && inputValue.set && inputValue.set.call(input, value);\n    const e = new Event('input', { bubbles: true });\n    input.dispatchEvent(e);\n}\nclass Typeahead extends React.Component {\n    static propTypes = propTypes;\n    static defaultProps = defaultProps;\n    state = getInitialState(this.props);\n    inputNode = null;\n    isMenuShown = false;\n    items = [];\n    componentDidMount() {\n        this.props.autoFocus && this.focus();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { labelKey, multiple, selected } = this.props;\n        validateSelectedPropChange(selected, prevProps.selected);\n        if (selected && !isEqual(selected, prevState.selected)) {\n            this.setState({ selected });\n            if (!multiple) {\n                this.setState({\n                    text: selected.length ? getOptionLabel(selected[0], labelKey) : '',\n                });\n            }\n        }\n    }\n    render() {\n        const { onChange, ...props } = this.props;\n        const mergedPropsAndState = { ...props, ...this.state };\n        const { filterBy, labelKey, options, paginate, shownResults, text } = mergedPropsAndState;\n        this.isMenuShown = isShown(mergedPropsAndState);\n        this.items = [];\n        let results = [];\n        if (this.isMenuShown) {\n            const cb = (isFunction(filterBy) ? filterBy : defaultFilterBy);\n            results = options.filter((option) => cb(option, mergedPropsAndState));\n            const shouldPaginate = paginate && results.length > shownResults;\n            results = getTruncatedOptions(results, shownResults);\n            if (addCustomOption(results, mergedPropsAndState)) {\n                results.push({\n                    customOption: true,\n                    [getStringLabelKey(labelKey)]: text,\n                });\n            }\n            if (shouldPaginate) {\n                results.push({\n                    [getStringLabelKey(labelKey)]: '',\n                    paginationOption: true,\n                });\n            }\n        }\n        return (React.createElement(TypeaheadManager, { ...mergedPropsAndState, hideMenu: this.hideMenu, inputNode: this.inputNode, inputRef: this.inputRef, isMenuShown: this.isMenuShown, onActiveItemChange: this._handleActiveItemChange, onAdd: this._handleSelectionAdd, onBlur: this._handleBlur, onChange: this._handleInputChange, onClear: this._handleClear, onClick: this._handleClick, onFocus: this._handleFocus, onHide: this.hideMenu, onInitialItemChange: this._handleInitialItemChange, onKeyDown: this._handleKeyDown, onMenuItemClick: this._handleMenuItemSelect, onRemove: this._handleSelectionRemove, results: results, setItem: this.setItem, toggleMenu: this.toggleMenu }));\n    }\n    blur = () => {\n        this.inputNode && this.inputNode.blur();\n        this.hideMenu();\n    };\n    clear = () => {\n        this.setState(clearTypeahead);\n    };\n    focus = () => {\n        this.inputNode && this.inputNode.focus();\n    };\n    getInput = () => {\n        return this.inputNode;\n    };\n    inputRef = (inputNode) => {\n        this.inputNode = inputNode;\n    };\n    setItem = (item, position) => {\n        this.items[position] = item;\n    };\n    hideMenu = () => {\n        this.setState(hideMenu);\n    };\n    toggleMenu = () => {\n        this.setState(toggleMenu);\n    };\n    _handleActiveIndexChange = (activeIndex) => {\n        this.setState((state) => ({\n            activeIndex,\n            activeItem: activeIndex >= 0 ? state.activeItem : undefined,\n        }));\n    };\n    _handleActiveItemChange = (activeItem) => {\n        if (!isEqual(activeItem, this.state.activeItem)) {\n            this.setState({ activeItem });\n        }\n    };\n    _handleBlur = (e) => {\n        e.persist();\n        this.setState({ isFocused: false }, () => this.props.onBlur(e));\n    };\n    _handleChange = (selected) => {\n        this.props.onChange && this.props.onChange(selected);\n    };\n    _handleClear = () => {\n        this.inputNode && triggerInputChange(this.inputNode, '');\n        this.setState(clearTypeahead, () => {\n            if (this.props.multiple) {\n                this._handleChange([]);\n            }\n        });\n    };\n    _handleClick = (e) => {\n        e.persist();\n        const onClick = this.props.inputProps?.onClick;\n        this.setState(clickOrFocusInput, () => isFunction(onClick) && onClick(e));\n    };\n    _handleFocus = (e) => {\n        e.persist();\n        this.setState(clickOrFocusInput, () => this.props.onFocus(e));\n    };\n    _handleInitialItemChange = (initialItem) => {\n        if (!isEqual(initialItem, this.state.initialItem)) {\n            this.setState({ initialItem });\n        }\n    };\n    _handleInputChange = (e) => {\n        e.persist();\n        const text = e.currentTarget.value;\n        const { multiple, onInputChange } = this.props;\n        const shouldClearSelections = this.state.selected.length && !multiple;\n        this.setState((state, props) => {\n            const { activeIndex, activeItem, shownResults } = getInitialState(props);\n            return {\n                activeIndex,\n                activeItem,\n                selected: shouldClearSelections ? [] : state.selected,\n                showMenu: true,\n                shownResults,\n                text,\n            };\n        }, () => {\n            onInputChange(text, e);\n            shouldClearSelections && this._handleChange([]);\n        });\n    };\n    _handleKeyDown = (e) => {\n        const { activeItem } = this.state;\n        if (!this.isMenuShown) {\n            if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n                this.setState({ showMenu: true });\n            }\n            this.props.onKeyDown(e);\n            return;\n        }\n        switch (e.key) {\n            case 'ArrowUp':\n            case 'ArrowDown':\n                e.preventDefault();\n                this._handleActiveIndexChange(getUpdatedActiveIndex(this.state.activeIndex, e.key, this.items));\n                break;\n            case 'Enter':\n                e.preventDefault();\n                activeItem && this._handleMenuItemSelect(activeItem, e);\n                break;\n            case 'Escape':\n            case 'Tab':\n                this.hideMenu();\n                break;\n            default:\n                break;\n        }\n        this.props.onKeyDown(e);\n    };\n    _handleMenuItemSelect = (option, e) => {\n        if (getOptionProperty(option, 'paginationOption')) {\n            this._handlePaginate(e);\n        }\n        else {\n            this._handleSelectionAdd(option);\n        }\n    };\n    _handlePaginate = (e) => {\n        e.persist();\n        this.setState((state, props) => ({\n            shownResults: state.shownResults + props.maxResults,\n        }), () => this.props.onPaginate(e, this.state.shownResults));\n    };\n    _handleSelectionAdd = (option) => {\n        const { multiple, labelKey } = this.props;\n        let selected;\n        let selection = option;\n        let text;\n        if (!isString(selection) && selection.customOption) {\n            selection = { ...selection, id: uniqueId('new-id-') };\n        }\n        if (multiple) {\n            selected = this.state.selected.concat(selection);\n            text = '';\n        }\n        else {\n            selected = [selection];\n            text = getOptionLabel(selection, labelKey);\n        }\n        this.setState((state, props) => ({\n            ...hideMenu(state, props),\n            initialItem: selection,\n            selected,\n            text,\n        }), () => this._handleChange(selected));\n    };\n    _handleSelectionRemove = (selection) => {\n        const selected = this.state.selected.filter((option) => !isEqual(option, selection));\n        this.focus();\n        this.setState((state, props) => ({\n            ...hideMenu(state, props),\n            selected,\n        }), () => this._handleChange(selected));\n    };\n}\nexport default Typeahead;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}